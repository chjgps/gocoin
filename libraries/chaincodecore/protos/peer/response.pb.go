// Code generated by protoc-gen-go. DO NOT EDIT.
// source: response.proto

package peer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// A response with a representation similar to an HTTP response that can
// be used within another message.
type Response struct {
	// A status code that should follow the HTTP status codes.
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// A message associated with the response code.
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// A payload that can be used to include metadata with this response.
	Payload []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Response) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Response) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*Response)(nil), "protos.Response")
}

func init() { proto.RegisterFile("response.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0xb1, 0xaa, 0xc2, 0x30,
	0x14, 0x86, 0xc9, 0xbd, 0xdc, 0x5e, 0x0d, 0xa2, 0xd0, 0x41, 0x32, 0x16, 0xa7, 0x2e, 0x36, 0x83,
	0x6f, 0xd0, 0x27, 0x90, 0x0c, 0x0e, 0x6e, 0xa7, 0xe9, 0xa1, 0x06, 0x6b, 0x4e, 0xc8, 0x49, 0x07,
	0xdf, 0x5e, 0xd4, 0x56, 0xea, 0x74, 0xf8, 0xf8, 0xe1, 0xe3, 0x3b, 0x72, 0x1d, 0x91, 0x03, 0x79,
	0xc6, 0x2a, 0x44, 0x4a, 0x94, 0x67, 0xaf, 0xc3, 0xbb, 0x93, 0x5c, 0x98, 0x71, 0xc9, 0xb7, 0x32,
	0xe3, 0x04, 0x69, 0x60, 0x25, 0x0a, 0x51, 0xfe, 0x99, 0x91, 0x72, 0x25, 0xff, 0x6f, 0xc8, 0x0c,
	0x1d, 0xaa, 0x9f, 0x42, 0x94, 0x4b, 0x33, 0xe1, 0x73, 0x09, 0x70, 0xef, 0x09, 0x5a, 0xf5, 0x5b,
	0x88, 0x72, 0x65, 0x26, 0xac, 0x59, 0xea, 0x8e, 0xf6, 0x83, 0x77, 0xc9, 0x92, 0xf3, 0x55, 0xef,
	0x9a, 0x08, 0xd1, 0x21, 0x57, 0xf6, 0x02, 0xce, 0x5b, 0x6a, 0xd1, 0x52, 0x1c, 0x63, 0x58, 0x07,
	0xc4, 0x58, 0x6f, 0xa6, 0x90, 0x23, 0xd8, 0x2b, 0x74, 0x78, 0x9e, 0x1b, 0xf4, 0xc7, 0xa0, 0xbf,
	0x0c, 0x7a, 0x66, 0x68, 0xde, 0x4f, 0x1d, 0x1e, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x0b, 0x01,
	0x7d, 0xed, 0x00, 0x00, 0x00,
}
